#ifndef PLANET_HPP
#define PLANET_HPP

#include "raymath.hpp"
#include "rlights.hpp"
#include "globals.hpp"
#include "object_transform.hpp"


class Planet {
public:
	static int numPlanets;

	// Members for game tick
	ObjectTransform transform;
	Vector3 Velocity = Vector3::Zero;
	Vector3 Acceleration = Vector3::Zero;
	float radius;
	double mass;
	float surfaceGravity;
	int id;

	// Members for rendering	
	Color color;					// Color of planet -- change this to utilize textures
	Model model;					// Model that gets drawn -- change this to be generated by my own code
	Shader* shader = nullptr;		// Might be `nullptr` -- Shader should be unloaded in the scope where it was defined
	Light* light = nullptr;			// Might be `nullptr`


	Planet(Vector3 position, float radius, float surfaceGravity, Color color=WHITE, Shader* shader=nullptr, Light* light=nullptr);
	void UpdatePosition(float dt);
	void UpdateVelocity(float dt);
	void UpdateLight();
	void Draw();
	void Free();
};

#endif /* PLANET_HPP */
